pipeline {
    agent any
environment {
     mvnHome = tool name: 'maven', type: 'maven'
     mvnCMD = "${mvnHome}/bin/mvn"
     }
 stages {
    stage('SCM') {
   steps {
    checkout scm
   }
  }
   stage('Dev stage ') {
        parallel {
            stage('Backend ') {
                stages{
                 stage('Compile & package') {
                    steps {
                        dir('kanban-app'){
                    sh '${mvnCMD} clean package'
                    }
                    }
                    }
                   stage('Unit Tests') {
                      steps {
                         dir('kanban-app'){
                    sh '${mvnCMD} test'
                    }
                    }
                 post {
                always {
                 dir('kanban-app'){
                    junit 'target/surefire-reports/**/*.xml'
                    }
                        }
                                                     }
                    }
                 stage('Code Quality inspection'){
                     steps { 
                     dir('kanban-app'){
                       sh "${mvnCMD} sonar:sonar"
                               }
                          }
                         }
                 stage('Build Docker Image'){
                     steps { 
                         dir('kanban-app'){  
                    sh 'docker build -t 192.168.1.69:8083/demo:1.0.0 .'
                      }
                              }
                    }
                 stage('Push Docker Image'){
    steps { 
     sh "docker login -u admin -p admin 192.168.1.69:8083" 
     sh 'docker push 192.168.1.69:8083/demo:1.0.0'
     }
   } 
                    }
                    }
        stage('Frontend ')  {
   stages{
            stage('SCM') {
       steps {
         dir('kanban-ui'){  checkout scm
   }
  }
  }
  stage('install modules') {
        steps {
        dir('kanban-ui'){
          sh '''
          npm install 
          npm install karma-junit-reporter
        '''
          }
          }
          }
     stage ('build') {
      steps{
       dir('kanban-ui'){ sh 'ng build'}
      }
    }
    stage('Build Docker Image'){
    steps { 
    dir('kanban-ui'){
    sh 'docker build -t 192.168.1.69:8083/frontend:1.0.0 .'}
   }
   }
   stage('Push Docker Image'){
    steps { 
     sh "docker login -u admin -p admin 192.168.1.69:8083" 
     sh 'docker push 192.168.1.69:8083/frontend:1.0.0'
     }
          }
          
                    }
                    }
 
                    }
                    }
    stage('Deploy app ') {
     steps {
      sh 'docker-compose -f app.yml up' 
     }
     }
    stage('Test stage') {
   parallel {
    stage('Test Backend ') {
     steps {
      build job: 'testKatalon' 
     }
     }
    stage('Test Frontend '){
          steps {
    sh 'pwd'
     }
     }
 }
   }
                    }
                    }
                    
                    
 
